name: CI

on:
  push:
  #  branches:  #uncomment to run only on main
  #  - main
  #  tags: # run CI if specific tags are pushed
  pull_request:
  #  branches: # only build on PRs against 'main' if you need to further limit when CI is run.
  #  - main

jobs:
  # Github Actions supports ubuntu, windows, and macos virtual environments:
  # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
  ci_tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      matrix:
        include:
          - name: Code style checks
            os: ubuntu-latest
            python: 3.x
            toxenv: codestyle
            allow_failure: false

          - name: PEP 517
            os: ubuntu-latest
            python: 3.x
            toxenv: pep517
            allow_failure: false

          - name: Security audit
            os: ubuntu-latest
            python: 3.x
            toxenv: securityaudit
            allow_failure: false

          - name: Python 3.8 with coverage checking, all deps, and remote data
            os: ubuntu-latest
            python: 3.8
            toxenv: py38-test-alldeps-cov
            toxposargs: --remote-data
            allow_failure: false

          - name: OS X - Python 3.7
            os: macos-latest
            python: 3.7
            toxenv: py37-test
            allow_failure: false

          - name: Windows - Python 3.8
            os: windows-latest
            python: 3.8
            toxenv: py38-test
            allow_failure: false

          # This also runs on cron but we want to make sure new changes
          # won't break this job at the PR stage.
          - name: Python 3.9 with latest dev versions of key dependencies
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-test-devdeps
            allow_failure: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up python ${{ matrix.python }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: python -m pip install --upgrade pip tox
    - name: Install codecov
      if: "contains(matrix.toxenv, '-cov')"
      run: python -m pip install codecov
    - name: Test/run with tox
      run: tox -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}
    - name: Upload coverage to codecov
      if: "contains(matrix.toxenv, '-cov')"
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
