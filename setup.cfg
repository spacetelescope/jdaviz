[metadata]
name = jdaviz
author = JDADF Developers
author_email = nearl@stsci.edu
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://jdaviz.readthedocs.io/en/latest/
description = Astronomical data analysis development leveraging the Jupyter platform
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = spacetelescope/jdaviz

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    pytest<6.0
    astropy
    traitlets<5.0
    glue-core>=1.0.1
    glue-jupyter>=0.2.1
    echo>=0.5.0
    ipyvue>=1.3.4
    ipyvuetify>=1.4.1
    ipysplitpanes
    ipygoldenlayout>=0.3.0
    voila>=0.2,<0.3
    pyyaml
    specutils
    glue-astronomy
    click
    spectral-cube>=0.5
    asteval
    # vispy is an indirect dependency, but older vispy's don't play nice with jdaviz install
    vispy>=0.6.5

[options.extras_require]
test =
    pytest-astropy
    pytest-tornasync
docs =
    sphinx-rtd-theme
    sphinx-astropy

[options.package_data]
jdaviz =
    data/*
    *.vue

[options.entry_points]
console_scripts =
gui_scripts =
    jdaviz = jdaviz.cli:main
jdaviz_plugins =
    default = jdaviz.configs.default
    cubeviz = jdaviz.configs.cubeviz
    specviz = jdaviz.configs.specviz
    mosviz = jdaviz.configs.mosviz

[tool:pytest]
testpaths = "jdaviz" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[flake8]
max-line-length = 100
# E402: Module level import not at top of file
ignore = E402

[coverage:run]
omit =
    jdaviz/_astropy_init*
    jdaviz/conftest.py
    jdaviz/*setup_package*
    jdaviz/tests/*
    jdaviz/*/tests/*
    jdaviz/extern/*
    jdaviz/version*
    */jdaviz/_astropy_init*
    */jdaviz/conftest.py
    */jdaviz/*setup_package*
    */jdaviz/tests/*
    */jdaviz/*/tests/*
    */jdaviz/extern/*
    */jdaviz/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
